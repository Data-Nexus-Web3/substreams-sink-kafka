// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: proto/sf/substreams/sink/kafka/v1/kafka.proto

package pbkafka

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExplosionMode int32

const (
	ExplosionMode_EXPLOSION_MODE_UNSPECIFIED ExplosionMode = 0
	ExplosionMode_EXPLOSION_MODE_NONE        ExplosionMode = 1 // No explosion (current behavior)
	ExplosionMode_EXPLOSION_MODE_ANNOTATIONS ExplosionMode = 2 // Use proto annotations
	ExplosionMode_EXPLOSION_MODE_CONFIG      ExplosionMode = 3 // Use external config file
)

// Enum value maps for ExplosionMode.
var (
	ExplosionMode_name = map[int32]string{
		0: "EXPLOSION_MODE_UNSPECIFIED",
		1: "EXPLOSION_MODE_NONE",
		2: "EXPLOSION_MODE_ANNOTATIONS",
		3: "EXPLOSION_MODE_CONFIG",
	}
	ExplosionMode_value = map[string]int32{
		"EXPLOSION_MODE_UNSPECIFIED": 0,
		"EXPLOSION_MODE_NONE":        1,
		"EXPLOSION_MODE_ANNOTATIONS": 2,
		"EXPLOSION_MODE_CONFIG":      3,
	}
)

func (x ExplosionMode) Enum() *ExplosionMode {
	p := new(ExplosionMode)
	*p = x
	return p
}

func (x ExplosionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExplosionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_enumTypes[0].Descriptor()
}

func (ExplosionMode) Type() protoreflect.EnumType {
	return &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_enumTypes[0]
}

func (x ExplosionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExplosionMode.Descriptor instead.
func (ExplosionMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{0}
}

// Configuration message for explosion behavior
type ExplosionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Global explosion mode
	Mode ExplosionMode `protobuf:"varint,1,opt,name=mode,proto3,enum=sf.substreams.sink.kafka.v1.ExplosionMode" json:"mode,omitempty"`
	// Custom topic mappings
	TopicConfigs map[string]*TopicConfig `protobuf:"bytes,2,rep,name=topic_configs,json=topicConfigs,proto3" json:"topic_configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Default parent fields to include in all explosions
	DefaultParentFields []string `protobuf:"bytes,3,rep,name=default_parent_fields,json=defaultParentFields,proto3" json:"default_parent_fields,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ExplosionConfig) Reset() {
	*x = ExplosionConfig{}
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplosionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplosionConfig) ProtoMessage() {}

func (x *ExplosionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplosionConfig.ProtoReflect.Descriptor instead.
func (*ExplosionConfig) Descriptor() ([]byte, []int) {
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *ExplosionConfig) GetMode() ExplosionMode {
	if x != nil {
		return x.Mode
	}
	return ExplosionMode_EXPLOSION_MODE_UNSPECIFIED
}

func (x *ExplosionConfig) GetTopicConfigs() map[string]*TopicConfig {
	if x != nil {
		return x.TopicConfigs
	}
	return nil
}

func (x *ExplosionConfig) GetDefaultParentFields() []string {
	if x != nil {
		return x.DefaultParentFields
	}
	return nil
}

type TopicConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Target topic name
	TopicName string `protobuf:"bytes,1,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	// Parent fields to include
	ParentFields []string `protobuf:"bytes,2,rep,name=parent_fields,json=parentFields,proto3" json:"parent_fields,omitempty"`
	// Custom serialization format for this topic
	SerializationFormat string `protobuf:"bytes,3,opt,name=serialization_format,json=serializationFormat,proto3" json:"serialization_format,omitempty"` // "json", "protobuf", "schema-registry"
	// Custom key extraction
	KeyField      string `protobuf:"bytes,4,opt,name=key_field,json=keyField,proto3" json:"key_field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicConfig) Reset() {
	*x = TopicConfig{}
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicConfig) ProtoMessage() {}

func (x *TopicConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicConfig.ProtoReflect.Descriptor instead.
func (*TopicConfig) Descriptor() ([]byte, []int) {
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP(), []int{1}
}

func (x *TopicConfig) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

func (x *TopicConfig) GetParentFields() []string {
	if x != nil {
		return x.ParentFields
	}
	return nil
}

func (x *TopicConfig) GetSerializationFormat() string {
	if x != nil {
		return x.SerializationFormat
	}
	return ""
}

func (x *TopicConfig) GetKeyField() string {
	if x != nil {
		return x.KeyField
	}
	return ""
}

var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "sf.substreams.sink.kafka.v1.topic_name",
		Tag:           "bytes,50001,opt,name=topic_name",
		Filename:      "proto/sf/substreams/sink/kafka/v1/kafka.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50002,
		Name:          "sf.substreams.sink.kafka.v1.include_parent_fields",
		Tag:           "bytes,50002,opt,name=include_parent_fields",
		Filename:      "proto/sf/substreams/sink/kafka/v1/kafka.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50003,
		Name:          "sf.substreams.sink.kafka.v1.is_root_topic",
		Tag:           "varint,50003,opt,name=is_root_topic",
		Filename:      "proto/sf/substreams/sink/kafka/v1/kafka.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50101,
		Name:          "sf.substreams.sink.kafka.v1.explode_to_topic",
		Tag:           "bytes,50101,opt,name=explode_to_topic",
		Filename:      "proto/sf/substreams/sink/kafka/v1/kafka.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         50102,
		Name:          "sf.substreams.sink.kafka.v1.include_in_parent_context",
		Tag:           "varint,50102,opt,name=include_in_parent_context",
		Filename:      "proto/sf/substreams/sink/kafka/v1/kafka.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50103,
		Name:          "sf.substreams.sink.kafka.v1.explosion_key_field",
		Tag:           "bytes,50103,opt,name=explosion_key_field",
		Filename:      "proto/sf/substreams/sink/kafka/v1/kafka.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// Define the Kafka topic name for this message type
	//
	// optional string topic_name = 50001;
	E_TopicName = &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes[0]
	// Include parent fields when exploding nested messages
	// Format: "field1,field2,nested.field3"
	//
	// optional string include_parent_fields = 50002;
	E_IncludeParentFields = &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes[1]
	// Whether this message should be treated as a root topic (default: false)
	//
	// optional bool is_root_topic = 50003;
	E_IsRootTopic = &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// Explode this repeated field into a separate topic
	// Value is the target topic name
	//
	// optional string explode_to_topic = 50101;
	E_ExplodeToTopic = &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes[3]
	// Whether to include this field in parent context when exploding
	//
	// optional bool include_in_parent_context = 50102;
	E_IncludeInParentContext = &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes[4]
	// Custom key field for this explosion (default: use index)
	//
	// optional string explosion_key_field = 50103;
	E_ExplosionKeyField = &file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes[5]
)

var File_proto_sf_substreams_sink_kafka_v1_kafka_proto protoreflect.FileDescriptor

const file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc = "" +
	"\n" +
	"-proto/sf/substreams/sink/kafka/v1/kafka.proto\x12\x1bsf.substreams.sink.kafka.v1\x1a google/protobuf/descriptor.proto\"\xd5\x02\n" +
	"\x0fExplosionConfig\x12>\n" +
	"\x04mode\x18\x01 \x01(\x0e2*.sf.substreams.sink.kafka.v1.ExplosionModeR\x04mode\x12c\n" +
	"\rtopic_configs\x18\x02 \x03(\v2>.sf.substreams.sink.kafka.v1.ExplosionConfig.TopicConfigsEntryR\ftopicConfigs\x122\n" +
	"\x15default_parent_fields\x18\x03 \x03(\tR\x13defaultParentFields\x1ai\n" +
	"\x11TopicConfigsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12>\n" +
	"\x05value\x18\x02 \x01(\v2(.sf.substreams.sink.kafka.v1.TopicConfigR\x05value:\x028\x01\"\xa1\x01\n" +
	"\vTopicConfig\x12\x1d\n" +
	"\n" +
	"topic_name\x18\x01 \x01(\tR\ttopicName\x12#\n" +
	"\rparent_fields\x18\x02 \x03(\tR\fparentFields\x121\n" +
	"\x14serialization_format\x18\x03 \x01(\tR\x13serializationFormat\x12\x1b\n" +
	"\tkey_field\x18\x04 \x01(\tR\bkeyField*\x83\x01\n" +
	"\rExplosionMode\x12\x1e\n" +
	"\x1aEXPLOSION_MODE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13EXPLOSION_MODE_NONE\x10\x01\x12\x1e\n" +
	"\x1aEXPLOSION_MODE_ANNOTATIONS\x10\x02\x12\x19\n" +
	"\x15EXPLOSION_MODE_CONFIG\x10\x03:@\n" +
	"\n" +
	"topic_name\x12\x1f.google.protobuf.MessageOptions\x18ц\x03 \x01(\tR\ttopicName:U\n" +
	"\x15include_parent_fields\x12\x1f.google.protobuf.MessageOptions\x18҆\x03 \x01(\tR\x13includeParentFields:E\n" +
	"\ris_root_topic\x12\x1f.google.protobuf.MessageOptions\x18ӆ\x03 \x01(\bR\visRootTopic:I\n" +
	"\x10explode_to_topic\x12\x1d.google.protobuf.FieldOptions\x18\xb5\x87\x03 \x01(\tR\x0eexplodeToTopic:Z\n" +
	"\x19include_in_parent_context\x12\x1d.google.protobuf.FieldOptions\x18\xb6\x87\x03 \x01(\bR\x16includeInParentContext:O\n" +
	"\x13explosion_key_field\x12\x1d.google.protobuf.FieldOptions\x18\xb7\x87\x03 \x01(\tR\x11explosionKeyFieldBZZXgithub.com/streamingfast/substreams-sink-kafka/proto/sf/substreams/sink/kafka/v1;pbkafkab\x06proto3"

var (
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescOnce sync.Once
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescData []byte
)

func file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescGZIP() []byte {
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescOnce.Do(func() {
		file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc), len(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc)))
	})
	return file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDescData
}

var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_goTypes = []any{
	(ExplosionMode)(0),                  // 0: sf.substreams.sink.kafka.v1.ExplosionMode
	(*ExplosionConfig)(nil),             // 1: sf.substreams.sink.kafka.v1.ExplosionConfig
	(*TopicConfig)(nil),                 // 2: sf.substreams.sink.kafka.v1.TopicConfig
	nil,                                 // 3: sf.substreams.sink.kafka.v1.ExplosionConfig.TopicConfigsEntry
	(*descriptorpb.MessageOptions)(nil), // 4: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 5: google.protobuf.FieldOptions
}
var file_proto_sf_substreams_sink_kafka_v1_kafka_proto_depIdxs = []int32{
	0, // 0: sf.substreams.sink.kafka.v1.ExplosionConfig.mode:type_name -> sf.substreams.sink.kafka.v1.ExplosionMode
	3, // 1: sf.substreams.sink.kafka.v1.ExplosionConfig.topic_configs:type_name -> sf.substreams.sink.kafka.v1.ExplosionConfig.TopicConfigsEntry
	2, // 2: sf.substreams.sink.kafka.v1.ExplosionConfig.TopicConfigsEntry.value:type_name -> sf.substreams.sink.kafka.v1.TopicConfig
	4, // 3: sf.substreams.sink.kafka.v1.topic_name:extendee -> google.protobuf.MessageOptions
	4, // 4: sf.substreams.sink.kafka.v1.include_parent_fields:extendee -> google.protobuf.MessageOptions
	4, // 5: sf.substreams.sink.kafka.v1.is_root_topic:extendee -> google.protobuf.MessageOptions
	5, // 6: sf.substreams.sink.kafka.v1.explode_to_topic:extendee -> google.protobuf.FieldOptions
	5, // 7: sf.substreams.sink.kafka.v1.include_in_parent_context:extendee -> google.protobuf.FieldOptions
	5, // 8: sf.substreams.sink.kafka.v1.explosion_key_field:extendee -> google.protobuf.FieldOptions
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	3, // [3:9] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_sf_substreams_sink_kafka_v1_kafka_proto_init() }
func file_proto_sf_substreams_sink_kafka_v1_kafka_proto_init() {
	if File_proto_sf_substreams_sink_kafka_v1_kafka_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc), len(file_proto_sf_substreams_sink_kafka_v1_kafka_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_proto_sf_substreams_sink_kafka_v1_kafka_proto_goTypes,
		DependencyIndexes: file_proto_sf_substreams_sink_kafka_v1_kafka_proto_depIdxs,
		EnumInfos:         file_proto_sf_substreams_sink_kafka_v1_kafka_proto_enumTypes,
		MessageInfos:      file_proto_sf_substreams_sink_kafka_v1_kafka_proto_msgTypes,
		ExtensionInfos:    file_proto_sf_substreams_sink_kafka_v1_kafka_proto_extTypes,
	}.Build()
	File_proto_sf_substreams_sink_kafka_v1_kafka_proto = out.File
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_goTypes = nil
	file_proto_sf_substreams_sink_kafka_v1_kafka_proto_depIdxs = nil
}
